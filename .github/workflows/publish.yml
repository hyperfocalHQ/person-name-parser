name: Publish to NPM

on:
  push:
    branches:
      - main

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.version_check.outputs.should_publish }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Check version
        id: version_check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view person-name-parser version 2>/dev/null || echo "0.0.0")

          echo "Package version: $PACKAGE_VERSION"
          echo "NPM version: $NPM_VERSION"

          if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "New version detected: $PACKAGE_VERSION (NPM has $NPM_VERSION)"
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $PACKAGE_VERSION"
          fi

  ci:
    needs: check-version
    if: needs.check-version.outputs.should_publish == 'true'
    uses: ./.github/workflows/ci.yml

  publish:
    needs: [check-version, ci]
    if: needs.check-version.outputs.should_publish == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
